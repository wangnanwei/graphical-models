 function [ X ] = gibbs_sampling(x,neighbours,J,Theta,n,burn)
%generate data X by gibbs sampling mathod
%input:    x: 1 by g^2 vector array, intial data piont;
%          neighbours: 1 by g^2 cell array, indices of neighbours;
%          J: indices matrix of parameters;                                
%          Theta : parameters of g by g grid graph;                         
%          n, burn: number of sample generated by gibbs sampling and number
%          of sample burned from the beginning.
p=size(x,2);
X=[];
X(1,:)=x;
for k=2:n
for i=1:p
    [ p0 ] = con_probability(i,x,neighbours{i},J,Theta);
    x(i)=binornd(1,1-p0);
end
X(k,:)=x;
end
X=X(burn+1:n,:);



function [ p0 ] = con_probability(v,x,neighbours,J,Theta)

%   written by nanwei, generate the conditional probability to do gibbs
%   sampling.
%v is a node; x is a data piont, neighbours is the neighbours of v, theta
%is a vector of all parameters.
%p0 is the conditional probability that the vertex 'v' takes value 0.
index=1;
index=[index x(neighbours)]';
p0=1/(1+exp(Theta(find(J(:,v)))'*index));



end
end

